#!/bin/bash

files_list="${1}"
shift
command_run="${@}"
commands_file="$(mktemp)"
dir_path="$(osascript -e 'tell application "Finder" to return (quoted form of POSIX path of (insertion location as alias))')"

# Only source shell files that exist (prevents blocking errors in some shells)
function source_shell_files {
  for file in "${@}"; do
    [[ -f "${file}" ]] && shell_files="${shell_files} source ${file};"
  done
}

# Configuration files referenced from https://en.wikipedia.org/wiki/Unix_shell#Configuration_files (snapshot: https://web-beta.archive.org/web/20170320010222/https://en.wikipedia.org/wiki/Unix_shell#Configuration_files)
if [[ ${SHELL} == *'bash' ]]; then
  source_shell_files '/etc/profile' "${HOME}/.profile" "${HOME}/.bash_profile" "${HOME}/.bashrc"
  set_aliases='shopt -s expand_aliases'
elif [[ ${SHELL} == *'zsh' ]]; then
  source_shell_files '/etc/profile' '/etc/zprofile' '/etc/zshenv' '/etc/zshrc' "${HOME}/.profile" "${HOME}/.zprofile" "${HOME}/.zshenv" "${HOME}/.zshrc"
  set_aliases='setopt aliases'
elif [[ ${SHELL} == *'tcsh' ]]; then
  source_shell_files '/etc/csh.cshrc' "${HOME}/.tcshrc" "${HOME}/.cshrc"
elif [[ ${SHELL} == *'csh' ]]; then
  source_shell_files '/etc/csh.cshrc' "${HOME}/.cshrc"
elif [[ ${SHELL} == *'fish' ]]; then
  source_shell_files "$HOME/.config/fish/config.fish" # Variables cannot be bracketed in fish
else
  echo 'Unrecognised shell.' >&2
fi

cat << EOF | sed -E 's/^ {2}//' > "${commands_file}"
  #!${SHELL}
  ${set_aliases}
  ${shell_files}
  cd ${dir_path}
EOF

if [[ "${files_list}" == 'run_in_dir' ]]; then
  echo "${command_run}" >> "${commands_file}"
else
  echo "xargs -0 -J {} ${command_run} < ${files_list}" >> "${commands_file}"
fi

chmod +x "${commands_file}"
${commands_file}

exit "${?}" # Make it explicit we need this
